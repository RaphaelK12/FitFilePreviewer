#region Copyright
////////////////////////////////////////////////////////////////////////////////
// The following FIT Protocol software provided may be used with FIT protocol
// devices only and remains the copyrighted property of Dynastream Innovations Inc.
// The software is being provided on an "as-is" basis and as an accommodation,
// and therefore all warranties, representations, or guarantees of any kind
// (whether express, implied or statutory) including, without limitation,
// warranties of merchantability, non-infringement, or fitness for a particular
// purpose, are specifically disclaimed.
//
// Copyright 2014 Dynastream Innovations Inc.
////////////////////////////////////////////////////////////////////////////////
// ****WARNING****  This file is auto-generated!  Do NOT edit this file.
// Profile Version = 12.20Release
// Tag = $Name$
////////////////////////////////////////////////////////////////////////////////

#endregion

namespace FitFilePreviewer.Decode.Fit.Mesgs
{
   /// <summary>
   /// Implements the UserProfile profile message.
   /// </summary>  
   public class UserProfileMesg : Mesg 
   {    
      #region Fields     
      #endregion

      #region Constructors                 
      public UserProfileMesg() : base((Mesg) Profile.mesgs[Profile.UserProfileIndex])               
      {                 
      }
      
      public UserProfileMesg(Mesg mesg) : base(mesg)
      {
      }
      #endregion // Constructors

      #region Methods    
      ///<summary>      
      /// Retrieves the MessageIndex field</summary>
      /// <returns>Returns nullable ushort representing the MessageIndex field</returns>      
      public ushort? GetMessageIndex()   
      {                
         return (ushort?)GetFieldValue(254, 0, Fit.SubfieldIndexMainField);                     
      }

      /// <summary>        
      /// Set MessageIndex field</summary>
      /// <param name="messageIndex_">Nullable field value to be set</param>      
      public void SetMessageIndex(ushort? messageIndex_) 
      {  
         SetFieldValue(254, 0, messageIndex_, Fit.SubfieldIndexMainField);
      }
          
      ///<summary>      
      /// Retrieves the FriendlyName field</summary>
      /// <returns>Returns byte[] representing the FriendlyName field</returns>      
      public byte[] GetFriendlyName()   
      {                
         return (byte[])GetFieldValue(0, 0, Fit.SubfieldIndexMainField);                     
      }

      /// <summary>        
      /// Set FriendlyName field</summary>
      /// <param name="friendlyName_">field value to be set</param>      
      public void SetFriendlyName(byte[] friendlyName_) 
      {  
         SetFieldValue(0, 0, friendlyName_, Fit.SubfieldIndexMainField);
      }
          
      ///<summary>      
      /// Retrieves the Gender field</summary>
      /// <returns>Returns nullable Gender enum representing the Gender field</returns>      
      public Types.Gender? GetGender()   
      { 
         object obj = GetFieldValue(1, 0, Fit.SubfieldIndexMainField);
         Types.Gender? value = obj == null ? (Types.Gender?)null : (Types.Gender)obj;
         return value;                     
      }

      /// <summary>        
      /// Set Gender field</summary>
      /// <param name="gender_">Nullable field value to be set</param>      
      public void SetGender(Types.Gender? gender_) 
      {  
         SetFieldValue(1, 0, gender_, Fit.SubfieldIndexMainField);
      }
          
      ///<summary>      
      /// Retrieves the Age field
      /// Units: years</summary>
      /// <returns>Returns nullable byte representing the Age field</returns>      
      public byte? GetAge()   
      {                
         return (byte?)GetFieldValue(2, 0, Fit.SubfieldIndexMainField);                     
      }

      /// <summary>        
      /// Set Age field
      /// Units: years</summary>
      /// <param name="age_">Nullable field value to be set</param>      
      public void SetAge(byte? age_) 
      {  
         SetFieldValue(2, 0, age_, Fit.SubfieldIndexMainField);
      }
          
      ///<summary>      
      /// Retrieves the Height field
      /// Units: m</summary>
      /// <returns>Returns nullable float representing the Height field</returns>      
      public float? GetHeight()   
      {                
         return (float?)GetFieldValue(3, 0, Fit.SubfieldIndexMainField);                     
      }

      /// <summary>        
      /// Set Height field
      /// Units: m</summary>
      /// <param name="height_">Nullable field value to be set</param>      
      public void SetHeight(float? height_) 
      {  
         SetFieldValue(3, 0, height_, Fit.SubfieldIndexMainField);
      }
          
      ///<summary>      
      /// Retrieves the Weight field
      /// Units: kg</summary>
      /// <returns>Returns nullable float representing the Weight field</returns>      
      public float? GetWeight()   
      {                
         return (float?)GetFieldValue(4, 0, Fit.SubfieldIndexMainField);                     
      }

      /// <summary>        
      /// Set Weight field
      /// Units: kg</summary>
      /// <param name="weight_">Nullable field value to be set</param>      
      public void SetWeight(float? weight_) 
      {  
         SetFieldValue(4, 0, weight_, Fit.SubfieldIndexMainField);
      }
          
      ///<summary>      
      /// Retrieves the Language field</summary>
      /// <returns>Returns nullable Language enum representing the Language field</returns>      
      public Types.Language? GetLanguage()   
      { 
         object obj = GetFieldValue(5, 0, Fit.SubfieldIndexMainField);
         Types.Language? value = obj == null ? (Types.Language?)null : (Types.Language)obj;
         return value;                     
      }

      /// <summary>        
      /// Set Language field</summary>
      /// <param name="language_">Nullable field value to be set</param>      
      public void SetLanguage(Types.Language? language_) 
      {  
         SetFieldValue(5, 0, language_, Fit.SubfieldIndexMainField);
      }
          
      ///<summary>      
      /// Retrieves the ElevSetting field</summary>
      /// <returns>Returns nullable DisplayMeasure enum representing the ElevSetting field</returns>      
      public Types.DisplayMeasure? GetElevSetting()   
      { 
         object obj = GetFieldValue(6, 0, Fit.SubfieldIndexMainField);
         Types.DisplayMeasure? value = obj == null ? (Types.DisplayMeasure?)null : (Types.DisplayMeasure)obj;
         return value;                     
      }

      /// <summary>        
      /// Set ElevSetting field</summary>
      /// <param name="elevSetting_">Nullable field value to be set</param>      
      public void SetElevSetting(Types.DisplayMeasure? elevSetting_) 
      {  
         SetFieldValue(6, 0, elevSetting_, Fit.SubfieldIndexMainField);
      }
          
      ///<summary>      
      /// Retrieves the WeightSetting field</summary>
      /// <returns>Returns nullable DisplayMeasure enum representing the WeightSetting field</returns>      
      public Types.DisplayMeasure? GetWeightSetting()   
      { 
         object obj = GetFieldValue(7, 0, Fit.SubfieldIndexMainField);
         Types.DisplayMeasure? value = obj == null ? (Types.DisplayMeasure?)null : (Types.DisplayMeasure)obj;
         return value;                     
      }

      /// <summary>        
      /// Set WeightSetting field</summary>
      /// <param name="weightSetting_">Nullable field value to be set</param>      
      public void SetWeightSetting(Types.DisplayMeasure? weightSetting_) 
      {  
         SetFieldValue(7, 0, weightSetting_, Fit.SubfieldIndexMainField);
      }
          
      ///<summary>      
      /// Retrieves the RestingHeartRate field
      /// Units: bpm</summary>
      /// <returns>Returns nullable byte representing the RestingHeartRate field</returns>      
      public byte? GetRestingHeartRate()   
      {                
         return (byte?)GetFieldValue(8, 0, Fit.SubfieldIndexMainField);                     
      }

      /// <summary>        
      /// Set RestingHeartRate field
      /// Units: bpm</summary>
      /// <param name="restingHeartRate_">Nullable field value to be set</param>      
      public void SetRestingHeartRate(byte? restingHeartRate_) 
      {  
         SetFieldValue(8, 0, restingHeartRate_, Fit.SubfieldIndexMainField);
      }
          
      ///<summary>      
      /// Retrieves the DefaultMaxRunningHeartRate field
      /// Units: bpm</summary>
      /// <returns>Returns nullable byte representing the DefaultMaxRunningHeartRate field</returns>      
      public byte? GetDefaultMaxRunningHeartRate()   
      {                
         return (byte?)GetFieldValue(9, 0, Fit.SubfieldIndexMainField);                     
      }

      /// <summary>        
      /// Set DefaultMaxRunningHeartRate field
      /// Units: bpm</summary>
      /// <param name="defaultMaxRunningHeartRate_">Nullable field value to be set</param>      
      public void SetDefaultMaxRunningHeartRate(byte? defaultMaxRunningHeartRate_) 
      {  
         SetFieldValue(9, 0, defaultMaxRunningHeartRate_, Fit.SubfieldIndexMainField);
      }
          
      ///<summary>      
      /// Retrieves the DefaultMaxBikingHeartRate field
      /// Units: bpm</summary>
      /// <returns>Returns nullable byte representing the DefaultMaxBikingHeartRate field</returns>      
      public byte? GetDefaultMaxBikingHeartRate()   
      {                
         return (byte?)GetFieldValue(10, 0, Fit.SubfieldIndexMainField);                     
      }

      /// <summary>        
      /// Set DefaultMaxBikingHeartRate field
      /// Units: bpm</summary>
      /// <param name="defaultMaxBikingHeartRate_">Nullable field value to be set</param>      
      public void SetDefaultMaxBikingHeartRate(byte? defaultMaxBikingHeartRate_) 
      {  
         SetFieldValue(10, 0, defaultMaxBikingHeartRate_, Fit.SubfieldIndexMainField);
      }
          
      ///<summary>      
      /// Retrieves the DefaultMaxHeartRate field
      /// Units: bpm</summary>
      /// <returns>Returns nullable byte representing the DefaultMaxHeartRate field</returns>      
      public byte? GetDefaultMaxHeartRate()   
      {                
         return (byte?)GetFieldValue(11, 0, Fit.SubfieldIndexMainField);                     
      }

      /// <summary>        
      /// Set DefaultMaxHeartRate field
      /// Units: bpm</summary>
      /// <param name="defaultMaxHeartRate_">Nullable field value to be set</param>      
      public void SetDefaultMaxHeartRate(byte? defaultMaxHeartRate_) 
      {  
         SetFieldValue(11, 0, defaultMaxHeartRate_, Fit.SubfieldIndexMainField);
      }
          
      ///<summary>      
      /// Retrieves the HrSetting field</summary>
      /// <returns>Returns nullable DisplayHeart enum representing the HrSetting field</returns>      
      public Types.DisplayHeart? GetHrSetting()   
      { 
         object obj = GetFieldValue(12, 0, Fit.SubfieldIndexMainField);
         Types.DisplayHeart? value = obj == null ? (Types.DisplayHeart?)null : (Types.DisplayHeart)obj;
         return value;                     
      }

      /// <summary>        
      /// Set HrSetting field</summary>
      /// <param name="hrSetting_">Nullable field value to be set</param>      
      public void SetHrSetting(Types.DisplayHeart? hrSetting_) 
      {  
         SetFieldValue(12, 0, hrSetting_, Fit.SubfieldIndexMainField);
      }
          
      ///<summary>      
      /// Retrieves the SpeedSetting field</summary>
      /// <returns>Returns nullable DisplayMeasure enum representing the SpeedSetting field</returns>      
      public Types.DisplayMeasure? GetSpeedSetting()   
      { 
         object obj = GetFieldValue(13, 0, Fit.SubfieldIndexMainField);
         Types.DisplayMeasure? value = obj == null ? (Types.DisplayMeasure?)null : (Types.DisplayMeasure)obj;
         return value;                     
      }

      /// <summary>        
      /// Set SpeedSetting field</summary>
      /// <param name="speedSetting_">Nullable field value to be set</param>      
      public void SetSpeedSetting(Types.DisplayMeasure? speedSetting_) 
      {  
         SetFieldValue(13, 0, speedSetting_, Fit.SubfieldIndexMainField);
      }
          
      ///<summary>      
      /// Retrieves the DistSetting field</summary>
      /// <returns>Returns nullable DisplayMeasure enum representing the DistSetting field</returns>      
      public Types.DisplayMeasure? GetDistSetting()   
      { 
         object obj = GetFieldValue(14, 0, Fit.SubfieldIndexMainField);
         Types.DisplayMeasure? value = obj == null ? (Types.DisplayMeasure?)null : (Types.DisplayMeasure)obj;
         return value;                     
      }

      /// <summary>        
      /// Set DistSetting field</summary>
      /// <param name="distSetting_">Nullable field value to be set</param>      
      public void SetDistSetting(Types.DisplayMeasure? distSetting_) 
      {  
         SetFieldValue(14, 0, distSetting_, Fit.SubfieldIndexMainField);
      }
          
      ///<summary>      
      /// Retrieves the PowerSetting field</summary>
      /// <returns>Returns nullable DisplayPower enum representing the PowerSetting field</returns>      
      public Types.DisplayPower? GetPowerSetting()   
      { 
         object obj = GetFieldValue(16, 0, Fit.SubfieldIndexMainField);
         Types.DisplayPower? value = obj == null ? (Types.DisplayPower?)null : (Types.DisplayPower)obj;
         return value;                     
      }

      /// <summary>        
      /// Set PowerSetting field</summary>
      /// <param name="powerSetting_">Nullable field value to be set</param>      
      public void SetPowerSetting(Types.DisplayPower? powerSetting_) 
      {  
         SetFieldValue(16, 0, powerSetting_, Fit.SubfieldIndexMainField);
      }
          
      ///<summary>      
      /// Retrieves the ActivityClass field</summary>
      /// <returns>Returns nullable ActivityClass enum representing the ActivityClass field</returns>      
      public Types.ActivityClass? GetActivityClass()   
      { 
         object obj = GetFieldValue(17, 0, Fit.SubfieldIndexMainField);
         Types.ActivityClass? value = obj == null ? (Types.ActivityClass?)null : (Types.ActivityClass)obj;
         return value;                     
      }

      /// <summary>        
      /// Set ActivityClass field</summary>
      /// <param name="activityClass_">Nullable field value to be set</param>      
      public void SetActivityClass(Types.ActivityClass? activityClass_) 
      {  
         SetFieldValue(17, 0, activityClass_, Fit.SubfieldIndexMainField);
      }
          
      ///<summary>      
      /// Retrieves the PositionSetting field</summary>
      /// <returns>Returns nullable DisplayPosition enum representing the PositionSetting field</returns>      
      public Types.DisplayPosition? GetPositionSetting()   
      { 
         object obj = GetFieldValue(18, 0, Fit.SubfieldIndexMainField);
         Types.DisplayPosition? value = obj == null ? (Types.DisplayPosition?)null : (Types.DisplayPosition)obj;
         return value;                     
      }

      /// <summary>        
      /// Set PositionSetting field</summary>
      /// <param name="positionSetting_">Nullable field value to be set</param>      
      public void SetPositionSetting(Types.DisplayPosition? positionSetting_) 
      {  
         SetFieldValue(18, 0, positionSetting_, Fit.SubfieldIndexMainField);
      }
          
      ///<summary>      
      /// Retrieves the TemperatureSetting field</summary>
      /// <returns>Returns nullable DisplayMeasure enum representing the TemperatureSetting field</returns>      
      public Types.DisplayMeasure? GetTemperatureSetting()   
      { 
         object obj = GetFieldValue(21, 0, Fit.SubfieldIndexMainField);
         Types.DisplayMeasure? value = obj == null ? (Types.DisplayMeasure?)null : (Types.DisplayMeasure)obj;
         return value;                     
      }

      /// <summary>        
      /// Set TemperatureSetting field</summary>
      /// <param name="temperatureSetting_">Nullable field value to be set</param>      
      public void SetTemperatureSetting(Types.DisplayMeasure? temperatureSetting_) 
      {  
         SetFieldValue(21, 0, temperatureSetting_, Fit.SubfieldIndexMainField);
      }
          
      ///<summary>      
      /// Retrieves the LocalId field</summary>
      /// <returns>Returns nullable ushort representing the LocalId field</returns>      
      public ushort? GetLocalId()   
      {                
         return (ushort?)GetFieldValue(22, 0, Fit.SubfieldIndexMainField);                     
      }

      /// <summary>        
      /// Set LocalId field</summary>
      /// <param name="localId_">Nullable field value to be set</param>      
      public void SetLocalId(ushort? localId_) 
      {  
         SetFieldValue(22, 0, localId_, Fit.SubfieldIndexMainField);
      }
          
      
      /// <summary>
      /// 
      /// </summary>  
      /// <returns>returns number of elements in field GlobalId</returns>      
      public int GetNumGlobalId() 
      {
         return GetNumFieldValues(23, Fit.SubfieldIndexMainField);
      }

      ///<summary>      
      /// Retrieves the GlobalId field</summary>
      /// <param name="index">0 based index of GlobalId element to retrieve</param>
      /// <returns>Returns nullable byte representing the GlobalId field</returns>      
      public byte? GetGlobalId(int index)   
      {                
         return (byte?)GetFieldValue(23, index, Fit.SubfieldIndexMainField);                     
      }

      /// <summary>        
      /// Set GlobalId field</summary>      
      /// <param name="index">0 based index of global_id</param>
      /// <param name="globalId_">Nullable field value to be set</param>      
      public void SetGlobalId(int index, byte? globalId_) 
      {  
         SetFieldValue(23, index, globalId_, Fit.SubfieldIndexMainField);
      }
          
      ///<summary>      
      /// Retrieves the HeightSetting field</summary>
      /// <returns>Returns nullable DisplayMeasure enum representing the HeightSetting field</returns>      
      public Types.DisplayMeasure? GetHeightSetting()   
      { 
         object obj = GetFieldValue(30, 0, Fit.SubfieldIndexMainField);
         Types.DisplayMeasure? value = obj == null ? (Types.DisplayMeasure?)null : (Types.DisplayMeasure)obj;
         return value;                     
      }

      /// <summary>        
      /// Set HeightSetting field</summary>
      /// <param name="heightSetting_">Nullable field value to be set</param>      
      public void SetHeightSetting(Types.DisplayMeasure? heightSetting_) 
      {  
         SetFieldValue(30, 0, heightSetting_, Fit.SubfieldIndexMainField);
      }
                        
      #endregion // Methods
   } // Class
} // namespace
